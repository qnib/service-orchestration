---
version: 0.1.0
name: elk
description: "Prometheus to monitor SWARM"
maintainers:
- name: Christian Kniep
  email: christian@qnib.org
targets:
  swarm: true
  kubernetes: false

--
version: '3.6'
networks:
  net:
    name: swarmprom_net

volumes:
    prometheus: {}
    grafana: {}
    alertmanager: {}

configs:
  prom_config:
    file: ./prometheus/conf/prometheus.yml
  caddy_config:
    file: ./caddy/Caddyfile
  dockerd_config:
    file: ./dockerd-exporter/Caddyfile
  node_rules:
    file: ./prometheus/rules/swarm_node.rules
  task_rules:
    file: ./prometheus/rules/swarm_task.rules
  service_rules:
    file: ./prometheus/rules/swarm_service.rules
services:
  dockerd-exporter:
    image: stefanprodan/caddy
    networks: ["net"]
    environment:
      - DOCKER_GWBRIDGE_IP=172.18.0.1
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  cadvisor:
    image: google/cadvisor
    networks: ["net"]
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: qnib/swarmprom-grafana:2018-07-10_17-38
    networks: ["net"]
    environment:
      - GF_SECURITY_ADMIN_USER=${gf_admin_user}
      - GF_SECURITY_ADMIN_PASSWORD=${gf_admin_passwd}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=${gf_server_root}
      - GF_SMTP_ENABLED=${gf_smtp_enabled}
      - GF_SMTP_FROM_ADDRESS=${gf_smtp_from_address}
      - GF_SMTP_FROM_NAME=${gf_smtp_from_name}
      - GF_SMTP_HOST=${gf_smtp_host}
      - GF_SMTP_USER=${gf_smtp_user}
      - GF_SMTP_PASSWORD=${gf_smtp_passwd}
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: qnib/swarmprom-alertmanager
    networks: ["net"]
    environment:
      - SLACK_URL=${alertmanager_slack_url}
      - SLACK_CHANNEL=${alertmanager_slack_channel}
      - SLACK_USER=${alertmanager_slack_user}
    command:
      - '-config.file=/etc/alertmanager/alertmanager.yml'
      - '-storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  unsee:
    image: cloudflare/unsee:v0.8.0
    networks: ["net"]
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    environment:
      - "ALERTMANAGER_URIS=default:http://alertmanager:9093"
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    image: qnib/swarmprom-node-exporter
    networks: ["net"]
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '-collector.textfile.directory=/etc/node-exporter/'
      - '-collector.procfs=/host/proc'
      - '-collector.sysfs=/host/sys'
      - '-collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '-collectors.enabled=textfile,conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,time,vmstat'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: qnib/plain-prometheus:2.3.1
    networks: ["net"]
    command:
      #- 'tail -f /dev/null'
      - '/opt/prometheus/prometheus'
      - '--config.file=/etc/prometheus.yml'
      - '--storage.tsdb.path=/data/prometheus'
      - '--storage.tsdb.retention=24h'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules
      - source: service_rules
        target: /etc/prometheus/swarm_service.rules
      - source: prom_config
        target: /opt/qnib/prometheus/prometheus.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M

  caddy:
    image: stefanprodan/caddy
    networks: ["net"]
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9094:9094"
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    configs:
      - source: caddy_config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 1s
      retries: 5

  gpu-exporter:
    image: qnib/pgme:ubuntu
    networks: ["net"]
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.houdini.gpu == true
    environment:
      - HOUDINI_ENABLED=true
      - HOUDINI_GPU_ENABLED=true

--
alertmanager_slack_channel: alert
alertmanager_slack_url: https://hooks.slack.com/services/TOKEN
alertmanager_slack_user: alert
gf_admin_user: admin
gf_admin_passwd: admin
gf_server_root: http://localhost:3000
gf_smtp_enabled: false
gf_smtp_from_address: grafana@localhost.com
gf_smtp_from_name: Grafana
gf_smtp_host: localhost:25
gf_smtp_user: root
gf_smtp_passwd: root
